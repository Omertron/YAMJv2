<project name="moviejukebox" default="all" basedir=".">

    <target name="all" depends="clean, compile, delivery" />

    <target name="init">
        <property name="version" value="v2.3 BETA" />
        <!-- This only works if the build is done through Hudson, otherwise it stays the same -->
        <property environment="env" />
    	
        <!-- Get the revision information from SVN -->
        <property environment="env" />
        <condition property="revision" value="${env.SVN_REVISION}" else="0000">
            <isset property="env.SVN_REVISION" />
        </condition>

        <echo>Writing version.txt</echo>
        <tstamp>
            <format property="builddate" pattern="yyyy-MM-dd HH:mm:ss" locale="en"/>
        </tstamp> 
        <echo file="conf/version.txt" append="false">Yet Another Movie Jukebox${line.separator}</echo>
        <echo file="conf/version.txt" append="true">Build Date: ${builddate}${line.separator}</echo>
        <echo file="conf/version.txt" append="true">Version: ${version}${line.separator}</echo>
        <echo file="conf/version.txt" append="true">Revision: r${env.SVN_REVISION}${line.separator}</echo>
    </target>

    <target name="clean">
        <delete dir="build" />
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="dist" includes="**/*" excludes="mediaInfo/*" followsymlinks="false" />
        </delete>
    </target>

    <target name="prepare" depends="init">
        <mkdir dir="build/classes" />
        <mkdir dir="dist" />
    </target>

    <target name="compile" depends="prepare,jaxb">
        <javac debug="true" encoding="utf-8" nowarn="true" source="1.6" destdir="build/classes" srcdir="build/jaxb:src">
            <classpath>
                <fileset dir="lib">
                    <include name="**/*.jar" />
                </fileset>
            </classpath>
        </javac>
    </target>

    <!-- =====================================================
          target: jaxb

          Generate code from schema (xsd) files.

          This illustrates the usage of the XmlElementWrapper
          plugin for JAXB xjc.
         ===================================================== -->
    <target name="jaxb" depends="prepare" description="Build code from schema files...">

        <mkdir dir="build/jaxb/com/moviejukebox/allocine/jaxb" />

        <!-- classpath for jaxb library -->
        <path id="cp.jaxb">
            <fileset dir="lib/jaxb" includes="*.jar" />
        </path>
        <!-- classpath for xew plugin -->
        <path id="cp.plugin">
            <fileset dir="lib/xjc-plugin" includes="*.jar" />
        </path>

        <!-- Ant task definition for the xjc tool -->
        <taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask">
          <classpath>
            <path refid="cp.jaxb" />
            <path refid="cp.plugin" />
          </classpath>
        </taskdef>

        <xjc destdir="build/jaxb" package="com.moviejukebox.allocine.jaxb" extension="Yes">
            <!-- <arg value="-debug" /> -->
            <!-- <arg value="-verbose" /> -->
            <arg value="-Xxew" />
            <arg value="-summary build/allocine-xew-summary.txt" />
            <arg value="-instantiate lazy" />
            <arg value="-delete" />
            <schema dir="schemas" includes="allocine.xsd" />
            <!-- <binding dir="${etc}" includes="allocine.xjb" /> -->
            <produces dir="build/jaxb/com/moviejukebox/allocine/jaxb" includes="*" />
        </xjc>
    </target>

    <target name="delivery" depends="clean, compile">
        <mkdir dir="dist/lib" />

        <tstamp>
            <format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
        </tstamp>

        <manifest file="MANIFEST.MF">
            <attribute name="Built-By" value="${user.name}" />
            <attribute name="Specification-Title" value="Yet Another Movie Jukebox" />
            <attribute name="Specification-Version" value="${version}" />
            <attribute name="Implementation-Version" value="${revision}" />
            <attribute name="Implementation-Title" value="${TODAY}" />
        </manifest>

        <copy todir="build/classes/" overwrite="true">
            <fileset dir="resources">
                <include name="**/*.*" />
            </fileset>
        </copy>

        <jar destfile="dist/lib/${ant.project.name}.jar" basedir="build/classes" includes="**/*.class,META-INF/**" manifest="MANIFEST.MF" />

        <copy todir="dist/lib" includeEmptyDirs="No">
            <fileset dir="lib">
                <include name="**/*" />
                <exclude name="junit*.jar" />
                <exclude name="jaxb/*" />
                <exclude name="xjc-plugin/*" />
            </fileset>
        </copy>

        <copy todir="dist/lib" includeEmptyDirs="No">
            <fileset dir="lib/jaxb">
                <include name="jaxb-impl.jar" />
                <include name="jaxb-api.jar" />
                <include name="jsr173_1.0_api.jar" />
                <include name="activation.jar" />
            </fileset>
        </copy>

        <copy todir="dist">
            <fileset dir="conf">
                <include name="**/*" />
            </fileset>
        </copy>

        <copy todir="dist/skins">
            <fileset dir="skins">
                <include name="**/*" />
            </fileset>
        </copy>

        <copy todir="dist/notices">
            <fileset dir="notices">
                <include name="**/*" />
            </fileset>
        </copy>

        <!-- <zip basedir="dist" destfile="dist/moviejukebox_${version}.zip" excludes="mediaInfo/" followsymlinks="false" /> -->
    	
        <zip basedir="dist" destfile="dist/yamj-svn-r${revision}.zip" excludes="mediaInfo/" followsymlinks="false" />
    </target>
</project>

