Project code style:
 - Ensure that the licence code is at the top of new files (see below)
 - encoding UTF-8
 - indentation: 4 spaces
 - tab size: 4 spaces
 - expand tabs to spaces
 - right margin: 160
 - beginning brace on same line as declaration
 - no new line for else, while, catch, finally
 - use whitespace around assignment and comparators
 - only a single declaration per line
 - always use braces for conditional statements and looping; even if only contains a single statement
 - use blank lines and spaces to assist in readability
 - comment logic that isn't straight forward

------- Example -------

package com.my.package;

import java.util.List;

public class MyClass {

    private String memberAttribute;
    private String blahString;

    public MyClass {
    }

    public void methodA() {
        // can use inline comments where necessary
        if (memberAttribute == null) {
            memberAttribute = "blah";
        }
    }

    public int methodB(List<String> someList) {
        int count = 0;

        for (String s : someList) {
            if (s.contains("abc")) {
                count++;
            } else {
                System.out.println(s);
            }
        }

        return count;
    }

}

----- License Code (Put at the top of each file -----
/*
 *      Copyright (c) 2004-2012 YAMJ Members
 *      http://code.google.com/p/moviejukebox/people/list
 *
 *      Web: http://code.google.com/p/moviejukebox/
 *
 *      This software is licensed under a Creative Commons License
 *      See this page: http://code.google.com/p/moviejukebox/wiki/License
 *
 *      For any reuse or distribution, you must make clear to others the
 *      license terms of this work.
 */

----- Eclipse Integration -----
Use the m2eclipse plugin to manage the project under eclipse.
Instructions to install the eclipse plugin: http://m2eclipse.sonatype.org/installing-m2eclipse.html
A maven version is embedded in it.

----- Compilation -----
Use maven 3.x to compile the project from command line (http://maven.apache.org/download.html)

From the command line the principal goals are:
    - mvn clean   : to clean the project
    - mvn compile : to compile the sources
    - mvn test    : to compile the sources, the tests, and execute the tests
    - mvn package : to create the package(s) (.jar, .zip, etc...)
    - mvn install : to install the package(s) in local repository
    - mvn deploy  : to deploy the package(s) to the oss.sonatype repository

If you want to skip the tests set the maven.test.skip property to true before the goal. Example:
    - mvn -Dmaven.test.skip=true package

In eclipse create a new "Run As" configuration (Run/Run Configurations). Then create a new Maven Build (name it 'package without test' for example)
and check the 'Skip Tests' option.

If you have problems executing the plugin like sonar, try to increase memory heap:
[Windows]  set MAVEN_OPTS=-Xmx512m -XX:MaxPermSize=256m
[Unix/OSX] export MAVEN_OPT=S'-Xmx512m -XX:MaxPermSize=256m'
